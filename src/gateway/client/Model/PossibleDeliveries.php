<?php
/**
 * PossibleDeliveries
 *
 * PHP version 5
 *
 * @category Class
 * @package  Gateway\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Delivery Gateway
 *
 * Delivery Gateway
 *
 * OpenAPI spec version: 2.16.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Gateway\Client\Model;

use \ArrayAccess;

/**
 * PossibleDeliveries Class Doc Comment
 *
 * @category    Class
 * @package     Gateway\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PossibleDeliveries implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'possibleDeliveries';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'mode' => 'string',
        'methodology' => 'string',
        'total_estimate' => 'string',
        'total_discount' => 'string',
        'total_quote' => 'string',
        'accessorial_estimate' => 'string',
        'lead_time' => 'int',
        'start_date' => '\DateTime',
        'completion_date' => '\DateTime',
        'schedule_constraints' => '\Gateway\Client\Model\ScheduleConstraints',
        'estimated_start_date' => '\DateTime',
        'estimated_completion_date' => '\DateTime',
        'estimated_schedule_constraints' => '\Gateway\Client\Model\EstimatedScheduleConstraints',
        'estimated_leadtime' => '\Gateway\Client\Model\EstimatedLeadtime',
        'reference_ids' => '\Gateway\Client\Model\ReferenceIds',
        'origin_indexes' => 'string[]',
        'shipments' => '\Gateway\Client\Model\Shipments[]',
        'intention_insurance_value' => 'string[]',
        'intention_insurance_notes' => 'string',
        'plan_insurance_value' => 'string[]',
        'plan_insurance_notes' => 'string',
        'accessorials_total' => 'string',
        'service_levels_information_notes' => 'string',
        'service_levels_accessorials_total' => 'string',
        'origin_location' => '\Gateway\Client\Model\OriginLocation',
        'destination_location' => '\Gateway\Client\Model\DestinationLocation'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'mode' => null,
        'methodology' => null,
        'total_estimate' => null,
        'total_discount' => null,
        'total_quote' => null,
        'accessorial_estimate' => null,
        'lead_time' => 'int64',
        'start_date' => 'date',
        'completion_date' => 'date',
        'schedule_constraints' => null,
        'estimated_start_date' => 'date',
        'estimated_completion_date' => 'date',
        'estimated_schedule_constraints' => null,
        'estimated_leadtime' => null,
        'reference_ids' => null,
        'origin_indexes' => null,
        'shipments' => null,
        'intention_insurance_value' => null,
        'intention_insurance_notes' => null,
        'plan_insurance_value' => null,
        'plan_insurance_notes' => null,
        'accessorials_total' => null,
        'service_levels_information_notes' => null,
        'service_levels_accessorials_total' => null,
        'origin_location' => null,
        'destination_location' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'mode' => 'mode',
        'methodology' => 'methodology',
        'total_estimate' => 'totalEstimate',
        'total_discount' => 'totalDiscount',
        'total_quote' => 'totalQuote',
        'accessorial_estimate' => 'accessorialEstimate',
        'lead_time' => 'leadTime',
        'start_date' => 'startDate',
        'completion_date' => 'completionDate',
        'schedule_constraints' => 'scheduleConstraints',
        'estimated_start_date' => 'estimatedStartDate',
        'estimated_completion_date' => 'estimatedCompletionDate',
        'estimated_schedule_constraints' => 'estimatedScheduleConstraints',
        'estimated_leadtime' => 'estimatedLeadtime',
        'reference_ids' => 'referenceIds',
        'origin_indexes' => 'originIndexes',
        'shipments' => 'shipments',
        'intention_insurance_value' => 'intention.insurance.value',
        'intention_insurance_notes' => 'intention.insurance.notes',
        'plan_insurance_value' => 'plan.insurance.value',
        'plan_insurance_notes' => 'plan.insurance.notes',
        'accessorials_total' => 'accessorials.total',
        'service_levels_information_notes' => 'serviceLevels.information.notes',
        'service_levels_accessorials_total' => 'serviceLevels.accessorials.total',
        'origin_location' => 'originLocation',
        'destination_location' => 'destinationLocation'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'mode' => 'setMode',
        'methodology' => 'setMethodology',
        'total_estimate' => 'setTotalEstimate',
        'total_discount' => 'setTotalDiscount',
        'total_quote' => 'setTotalQuote',
        'accessorial_estimate' => 'setAccessorialEstimate',
        'lead_time' => 'setLeadTime',
        'start_date' => 'setStartDate',
        'completion_date' => 'setCompletionDate',
        'schedule_constraints' => 'setScheduleConstraints',
        'estimated_start_date' => 'setEstimatedStartDate',
        'estimated_completion_date' => 'setEstimatedCompletionDate',
        'estimated_schedule_constraints' => 'setEstimatedScheduleConstraints',
        'estimated_leadtime' => 'setEstimatedLeadtime',
        'reference_ids' => 'setReferenceIds',
        'origin_indexes' => 'setOriginIndexes',
        'shipments' => 'setShipments',
        'intention_insurance_value' => 'setIntentionInsuranceValue',
        'intention_insurance_notes' => 'setIntentionInsuranceNotes',
        'plan_insurance_value' => 'setPlanInsuranceValue',
        'plan_insurance_notes' => 'setPlanInsuranceNotes',
        'accessorials_total' => 'setAccessorialsTotal',
        'service_levels_information_notes' => 'setServiceLevelsInformationNotes',
        'service_levels_accessorials_total' => 'setServiceLevelsAccessorialsTotal',
        'origin_location' => 'setOriginLocation',
        'destination_location' => 'setDestinationLocation'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'mode' => 'getMode',
        'methodology' => 'getMethodology',
        'total_estimate' => 'getTotalEstimate',
        'total_discount' => 'getTotalDiscount',
        'total_quote' => 'getTotalQuote',
        'accessorial_estimate' => 'getAccessorialEstimate',
        'lead_time' => 'getLeadTime',
        'start_date' => 'getStartDate',
        'completion_date' => 'getCompletionDate',
        'schedule_constraints' => 'getScheduleConstraints',
        'estimated_start_date' => 'getEstimatedStartDate',
        'estimated_completion_date' => 'getEstimatedCompletionDate',
        'estimated_schedule_constraints' => 'getEstimatedScheduleConstraints',
        'estimated_leadtime' => 'getEstimatedLeadtime',
        'reference_ids' => 'getReferenceIds',
        'origin_indexes' => 'getOriginIndexes',
        'shipments' => 'getShipments',
        'intention_insurance_value' => 'getIntentionInsuranceValue',
        'intention_insurance_notes' => 'getIntentionInsuranceNotes',
        'plan_insurance_value' => 'getPlanInsuranceValue',
        'plan_insurance_notes' => 'getPlanInsuranceNotes',
        'accessorials_total' => 'getAccessorialsTotal',
        'service_levels_information_notes' => 'getServiceLevelsInformationNotes',
        'service_levels_accessorials_total' => 'getServiceLevelsAccessorialsTotal',
        'origin_location' => 'getOriginLocation',
        'destination_location' => 'getDestinationLocation'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['mode'] = isset($data['mode']) ? $data['mode'] : null;
        $this->container['methodology'] = isset($data['methodology']) ? $data['methodology'] : null;
        $this->container['total_estimate'] = isset($data['total_estimate']) ? $data['total_estimate'] : null;
        $this->container['total_discount'] = isset($data['total_discount']) ? $data['total_discount'] : null;
        $this->container['total_quote'] = isset($data['total_quote']) ? $data['total_quote'] : null;
        $this->container['accessorial_estimate'] = isset($data['accessorial_estimate']) ? $data['accessorial_estimate'] : null;
        $this->container['lead_time'] = isset($data['lead_time']) ? $data['lead_time'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['completion_date'] = isset($data['completion_date']) ? $data['completion_date'] : null;
        $this->container['schedule_constraints'] = isset($data['schedule_constraints']) ? $data['schedule_constraints'] : null;
        $this->container['estimated_start_date'] = isset($data['estimated_start_date']) ? $data['estimated_start_date'] : null;
        $this->container['estimated_completion_date'] = isset($data['estimated_completion_date']) ? $data['estimated_completion_date'] : null;
        $this->container['estimated_schedule_constraints'] = isset($data['estimated_schedule_constraints']) ? $data['estimated_schedule_constraints'] : null;
        $this->container['estimated_leadtime'] = isset($data['estimated_leadtime']) ? $data['estimated_leadtime'] : null;
        $this->container['reference_ids'] = isset($data['reference_ids']) ? $data['reference_ids'] : null;
        $this->container['origin_indexes'] = isset($data['origin_indexes']) ? $data['origin_indexes'] : null;
        $this->container['shipments'] = isset($data['shipments']) ? $data['shipments'] : null;
        $this->container['intention_insurance_value'] = isset($data['intention_insurance_value']) ? $data['intention_insurance_value'] : null;
        $this->container['intention_insurance_notes'] = isset($data['intention_insurance_notes']) ? $data['intention_insurance_notes'] : null;
        $this->container['plan_insurance_value'] = isset($data['plan_insurance_value']) ? $data['plan_insurance_value'] : null;
        $this->container['plan_insurance_notes'] = isset($data['plan_insurance_notes']) ? $data['plan_insurance_notes'] : null;
        $this->container['accessorials_total'] = isset($data['accessorials_total']) ? $data['accessorials_total'] : null;
        $this->container['service_levels_information_notes'] = isset($data['service_levels_information_notes']) ? $data['service_levels_information_notes'] : null;
        $this->container['service_levels_accessorials_total'] = isset($data['service_levels_accessorials_total']) ? $data['service_levels_accessorials_total'] : null;
        $this->container['origin_location'] = isset($data['origin_location']) ? $data['origin_location'] : null;
        $this->container['destination_location'] = isset($data['destination_location']) ? $data['destination_location'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets mode
     * @return string
     */
    public function getMode()
    {
        return $this->container['mode'];
    }

    /**
     * Sets mode
     * @param string $mode
     * @return $this
     */
    public function setMode($mode)
    {
        $this->container['mode'] = $mode;

        return $this;
    }

    /**
     * Gets methodology
     * @return string
     */
    public function getMethodology()
    {
        return $this->container['methodology'];
    }

    /**
     * Sets methodology
     * @param string $methodology
     * @return $this
     */
    public function setMethodology($methodology)
    {
        $this->container['methodology'] = $methodology;

        return $this;
    }

    /**
     * Gets total_estimate
     * @return string
     */
    public function getTotalEstimate()
    {
        return $this->container['total_estimate'];
    }

    /**
     * Sets total_estimate
     * @param string $total_estimate
     * @return $this
     */
    public function setTotalEstimate($total_estimate)
    {
        $this->container['total_estimate'] = $total_estimate;

        return $this;
    }

    /**
     * Gets total_discount
     * @return string
     */
    public function getTotalDiscount()
    {
        return $this->container['total_discount'];
    }

    /**
     * Sets total_discount
     * @param string $total_discount
     * @return $this
     */
    public function setTotalDiscount($total_discount)
    {
        $this->container['total_discount'] = $total_discount;

        return $this;
    }

    /**
     * Gets total_quote
     * @return string
     */
    public function getTotalQuote()
    {
        return $this->container['total_quote'];
    }

    /**
     * Sets total_quote
     * @param string $total_quote
     * @return $this
     */
    public function setTotalQuote($total_quote)
    {
        $this->container['total_quote'] = $total_quote;

        return $this;
    }

    /**
     * Gets accessorial_estimate
     * @return string
     */
    public function getAccessorialEstimate()
    {
        return $this->container['accessorial_estimate'];
    }

    /**
     * Sets accessorial_estimate
     * @param string $accessorial_estimate
     * @return $this
     */
    public function setAccessorialEstimate($accessorial_estimate)
    {
        $this->container['accessorial_estimate'] = $accessorial_estimate;

        return $this;
    }

    /**
     * Gets lead_time
     * @return int
     */
    public function getLeadTime()
    {
        return $this->container['lead_time'];
    }

    /**
     * Sets lead_time
     * @param int $lead_time
     * @return $this
     */
    public function setLeadTime($lead_time)
    {
        $this->container['lead_time'] = $lead_time;

        return $this;
    }

    /**
     * Gets start_date
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     * @param \DateTime $start_date
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets completion_date
     * @return \DateTime
     */
    public function getCompletionDate()
    {
        return $this->container['completion_date'];
    }

    /**
     * Sets completion_date
     * @param \DateTime $completion_date
     * @return $this
     */
    public function setCompletionDate($completion_date)
    {
        $this->container['completion_date'] = $completion_date;

        return $this;
    }

    /**
     * Gets schedule_constraints
     * @return \Gateway\Client\Model\ScheduleConstraints
     */
    public function getScheduleConstraints()
    {
        return $this->container['schedule_constraints'];
    }

    /**
     * Sets schedule_constraints
     * @param \Gateway\Client\Model\ScheduleConstraints $schedule_constraints
     * @return $this
     */
    public function setScheduleConstraints($schedule_constraints)
    {
        $this->container['schedule_constraints'] = $schedule_constraints;

        return $this;
    }

    /**
     * Gets estimated_start_date
     * @return \DateTime
     */
    public function getEstimatedStartDate()
    {
        return $this->container['estimated_start_date'];
    }

    /**
     * Sets estimated_start_date
     * @param \DateTime $estimated_start_date
     * @return $this
     */
    public function setEstimatedStartDate($estimated_start_date)
    {
        $this->container['estimated_start_date'] = $estimated_start_date;

        return $this;
    }

    /**
     * Gets estimated_completion_date
     * @return \DateTime
     */
    public function getEstimatedCompletionDate()
    {
        return $this->container['estimated_completion_date'];
    }

    /**
     * Sets estimated_completion_date
     * @param \DateTime $estimated_completion_date
     * @return $this
     */
    public function setEstimatedCompletionDate($estimated_completion_date)
    {
        $this->container['estimated_completion_date'] = $estimated_completion_date;

        return $this;
    }

    /**
     * Gets estimated_schedule_constraints
     * @return \Gateway\Client\Model\EstimatedScheduleConstraints
     */
    public function getEstimatedScheduleConstraints()
    {
        return $this->container['estimated_schedule_constraints'];
    }

    /**
     * Sets estimated_schedule_constraints
     * @param \Gateway\Client\Model\EstimatedScheduleConstraints $estimated_schedule_constraints
     * @return $this
     */
    public function setEstimatedScheduleConstraints($estimated_schedule_constraints)
    {
        $this->container['estimated_schedule_constraints'] = $estimated_schedule_constraints;

        return $this;
    }

    /**
     * Gets estimated_leadtime
     * @return \Gateway\Client\Model\EstimatedLeadtime
     */
    public function getEstimatedLeadtime()
    {
        return $this->container['estimated_leadtime'];
    }

    /**
     * Sets estimated_leadtime
     * @param \Gateway\Client\Model\EstimatedLeadtime $estimated_leadtime
     * @return $this
     */
    public function setEstimatedLeadtime($estimated_leadtime)
    {
        $this->container['estimated_leadtime'] = $estimated_leadtime;

        return $this;
    }

    /**
     * Gets reference_ids
     * @return \Gateway\Client\Model\ReferenceIds
     */
    public function getReferenceIds()
    {
        return $this->container['reference_ids'];
    }

    /**
     * Sets reference_ids
     * @param \Gateway\Client\Model\ReferenceIds $reference_ids
     * @return $this
     */
    public function setReferenceIds($reference_ids)
    {
        $this->container['reference_ids'] = $reference_ids;

        return $this;
    }

    /**
     * Gets origin_indexes
     * @return string[]
     */
    public function getOriginIndexes()
    {
        return $this->container['origin_indexes'];
    }

    /**
     * Sets origin_indexes
     * @param string[] $origin_indexes
     * @return $this
     */
    public function setOriginIndexes($origin_indexes)
    {
        $this->container['origin_indexes'] = $origin_indexes;

        return $this;
    }

    /**
     * Gets shipments
     * @return \Gateway\Client\Model\Shipments[]
     */
    public function getShipments()
    {
        return $this->container['shipments'];
    }

    /**
     * Sets shipments
     * @param \Gateway\Client\Model\Shipments[] $shipments
     * @return $this
     */
    public function setShipments($shipments)
    {
        $this->container['shipments'] = $shipments;

        return $this;
    }

    /**
     * Gets intention_insurance_value
     * @return string[]
     */
    public function getIntentionInsuranceValue()
    {
        return $this->container['intention_insurance_value'];
    }

    /**
     * Sets intention_insurance_value
     * @param string[] $intention_insurance_value
     * @return $this
     */
    public function setIntentionInsuranceValue($intention_insurance_value)
    {
        $this->container['intention_insurance_value'] = $intention_insurance_value;

        return $this;
    }

    /**
     * Gets intention_insurance_notes
     * @return string
     */
    public function getIntentionInsuranceNotes()
    {
        return $this->container['intention_insurance_notes'];
    }

    /**
     * Sets intention_insurance_notes
     * @param string $intention_insurance_notes
     * @return $this
     */
    public function setIntentionInsuranceNotes($intention_insurance_notes)
    {
        $this->container['intention_insurance_notes'] = $intention_insurance_notes;

        return $this;
    }

    /**
     * Gets plan_insurance_value
     * @return string[]
     */
    public function getPlanInsuranceValue()
    {
        return $this->container['plan_insurance_value'];
    }

    /**
     * Sets plan_insurance_value
     * @param string[] $plan_insurance_value
     * @return $this
     */
    public function setPlanInsuranceValue($plan_insurance_value)
    {
        $this->container['plan_insurance_value'] = $plan_insurance_value;

        return $this;
    }

    /**
     * Gets plan_insurance_notes
     * @return string
     */
    public function getPlanInsuranceNotes()
    {
        return $this->container['plan_insurance_notes'];
    }

    /**
     * Sets plan_insurance_notes
     * @param string $plan_insurance_notes
     * @return $this
     */
    public function setPlanInsuranceNotes($plan_insurance_notes)
    {
        $this->container['plan_insurance_notes'] = $plan_insurance_notes;

        return $this;
    }

    /**
     * Gets accessorials_total
     * @return string
     */
    public function getAccessorialsTotal()
    {
        return $this->container['accessorials_total'];
    }

    /**
     * Sets accessorials_total
     * @param string $accessorials_total
     * @return $this
     */
    public function setAccessorialsTotal($accessorials_total)
    {
        $this->container['accessorials_total'] = $accessorials_total;

        return $this;
    }

    /**
     * Gets service_levels_information_notes
     * @return string
     */
    public function getServiceLevelsInformationNotes()
    {
        return $this->container['service_levels_information_notes'];
    }

    /**
     * Sets service_levels_information_notes
     * @param string $service_levels_information_notes
     * @return $this
     */
    public function setServiceLevelsInformationNotes($service_levels_information_notes)
    {
        $this->container['service_levels_information_notes'] = $service_levels_information_notes;

        return $this;
    }

    /**
     * Gets service_levels_accessorials_total
     * @return string
     */
    public function getServiceLevelsAccessorialsTotal()
    {
        return $this->container['service_levels_accessorials_total'];
    }

    /**
     * Sets service_levels_accessorials_total
     * @param string $service_levels_accessorials_total
     * @return $this
     */
    public function setServiceLevelsAccessorialsTotal($service_levels_accessorials_total)
    {
        $this->container['service_levels_accessorials_total'] = $service_levels_accessorials_total;

        return $this;
    }

    /**
     * Gets origin_location
     * @return \Gateway\Client\Model\OriginLocation
     */
    public function getOriginLocation()
    {
        return $this->container['origin_location'];
    }

    /**
     * Sets origin_location
     * @param \Gateway\Client\Model\OriginLocation $origin_location
     * @return $this
     */
    public function setOriginLocation($origin_location)
    {
        $this->container['origin_location'] = $origin_location;

        return $this;
    }

    /**
     * Gets destination_location
     * @return \Gateway\Client\Model\DestinationLocation
     */
    public function getDestinationLocation()
    {
        return $this->container['destination_location'];
    }

    /**
     * Sets destination_location
     * @param \Gateway\Client\Model\DestinationLocation $destination_location
     * @return $this
     */
    public function setDestinationLocation($destination_location)
    {
        $this->container['destination_location'] = $destination_location;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Gateway\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Gateway\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


