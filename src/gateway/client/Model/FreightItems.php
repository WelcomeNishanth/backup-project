<?php
/**
 * FreightItems
 *
 * PHP version 5
 *
 * @category Class
 * @package  Gateway\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Delivery Gateway
 *
 * Delivery Gateway
 *
 * OpenAPI spec version: 2.16.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Gateway\Client\Model;

use \ArrayAccess;

/**
 * FreightItems Class Doc Comment
 *
 * @category    Class
 * @package     Gateway\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class FreightItems implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'freightItems';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'quantity' => 'int',
        'unit' => 'string',
        'class_code' => 'string',
        'nmfc' => 'string',
        'dimensions' => '\Gateway\Client\Model\Dimensions',
        'weight' => '\Gateway\Client\Model\Weight',
        'description' => 'string',
        'item_ids' => '\Gateway\Client\Model\ItemIds',
        'packaging_pieces' => 'string',
        'packaging_packaging_value' => 'string[]',
        'packaging_packaging_notes' => 'string',
        'intention_protection_value' => 'string[]',
        'intention_protection_notes' => 'string',
        'intention_handling_requirements_value' => 'string[]',
        'intention_handling_requirements_notes' => 'string',
        'plan_protection_value' => 'string[]',
        'plan_protection_notes' => 'string',
        'information_atypical_properties_value' => 'string[]',
        'information_atypical_properties_notes' => 'string',
        'accessorials_total' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'quantity' => 'int64',
        'unit' => null,
        'class_code' => null,
        'nmfc' => null,
        'dimensions' => null,
        'weight' => null,
        'description' => null,
        'item_ids' => null,
        'packaging_pieces' => null,
        'packaging_packaging_value' => null,
        'packaging_packaging_notes' => null,
        'intention_protection_value' => null,
        'intention_protection_notes' => null,
        'intention_handling_requirements_value' => null,
        'intention_handling_requirements_notes' => null,
        'plan_protection_value' => null,
        'plan_protection_notes' => null,
        'information_atypical_properties_value' => null,
        'information_atypical_properties_notes' => null,
        'accessorials_total' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'quantity' => 'quantity',
        'unit' => 'unit',
        'class_code' => 'classCode',
        'nmfc' => 'nmfc',
        'dimensions' => 'dimensions',
        'weight' => 'weight',
        'description' => 'description',
        'item_ids' => 'itemIds',
        'packaging_pieces' => 'packaging.pieces',
        'packaging_packaging_value' => 'packaging.packaging.value',
        'packaging_packaging_notes' => 'packaging.packaging.notes',
        'intention_protection_value' => 'intention.protection.value',
        'intention_protection_notes' => 'intention.protection.notes',
        'intention_handling_requirements_value' => 'intention.handlingRequirements.value',
        'intention_handling_requirements_notes' => 'intention.handlingRequirements.notes',
        'plan_protection_value' => 'plan.protection.value',
        'plan_protection_notes' => 'plan.protection.notes',
        'information_atypical_properties_value' => 'information.atypicalProperties.value',
        'information_atypical_properties_notes' => 'information.atypicalProperties.notes',
        'accessorials_total' => 'accessorials.total'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'quantity' => 'setQuantity',
        'unit' => 'setUnit',
        'class_code' => 'setClassCode',
        'nmfc' => 'setNmfc',
        'dimensions' => 'setDimensions',
        'weight' => 'setWeight',
        'description' => 'setDescription',
        'item_ids' => 'setItemIds',
        'packaging_pieces' => 'setPackagingPieces',
        'packaging_packaging_value' => 'setPackagingPackagingValue',
        'packaging_packaging_notes' => 'setPackagingPackagingNotes',
        'intention_protection_value' => 'setIntentionProtectionValue',
        'intention_protection_notes' => 'setIntentionProtectionNotes',
        'intention_handling_requirements_value' => 'setIntentionHandlingRequirementsValue',
        'intention_handling_requirements_notes' => 'setIntentionHandlingRequirementsNotes',
        'plan_protection_value' => 'setPlanProtectionValue',
        'plan_protection_notes' => 'setPlanProtectionNotes',
        'information_atypical_properties_value' => 'setInformationAtypicalPropertiesValue',
        'information_atypical_properties_notes' => 'setInformationAtypicalPropertiesNotes',
        'accessorials_total' => 'setAccessorialsTotal'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'quantity' => 'getQuantity',
        'unit' => 'getUnit',
        'class_code' => 'getClassCode',
        'nmfc' => 'getNmfc',
        'dimensions' => 'getDimensions',
        'weight' => 'getWeight',
        'description' => 'getDescription',
        'item_ids' => 'getItemIds',
        'packaging_pieces' => 'getPackagingPieces',
        'packaging_packaging_value' => 'getPackagingPackagingValue',
        'packaging_packaging_notes' => 'getPackagingPackagingNotes',
        'intention_protection_value' => 'getIntentionProtectionValue',
        'intention_protection_notes' => 'getIntentionProtectionNotes',
        'intention_handling_requirements_value' => 'getIntentionHandlingRequirementsValue',
        'intention_handling_requirements_notes' => 'getIntentionHandlingRequirementsNotes',
        'plan_protection_value' => 'getPlanProtectionValue',
        'plan_protection_notes' => 'getPlanProtectionNotes',
        'information_atypical_properties_value' => 'getInformationAtypicalPropertiesValue',
        'information_atypical_properties_notes' => 'getInformationAtypicalPropertiesNotes',
        'accessorials_total' => 'getAccessorialsTotal'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['unit'] = isset($data['unit']) ? $data['unit'] : null;
        $this->container['class_code'] = isset($data['class_code']) ? $data['class_code'] : null;
        $this->container['nmfc'] = isset($data['nmfc']) ? $data['nmfc'] : null;
        $this->container['dimensions'] = isset($data['dimensions']) ? $data['dimensions'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['item_ids'] = isset($data['item_ids']) ? $data['item_ids'] : null;
        $this->container['packaging_pieces'] = isset($data['packaging_pieces']) ? $data['packaging_pieces'] : null;
        $this->container['packaging_packaging_value'] = isset($data['packaging_packaging_value']) ? $data['packaging_packaging_value'] : null;
        $this->container['packaging_packaging_notes'] = isset($data['packaging_packaging_notes']) ? $data['packaging_packaging_notes'] : null;
        $this->container['intention_protection_value'] = isset($data['intention_protection_value']) ? $data['intention_protection_value'] : null;
        $this->container['intention_protection_notes'] = isset($data['intention_protection_notes']) ? $data['intention_protection_notes'] : null;
        $this->container['intention_handling_requirements_value'] = isset($data['intention_handling_requirements_value']) ? $data['intention_handling_requirements_value'] : null;
        $this->container['intention_handling_requirements_notes'] = isset($data['intention_handling_requirements_notes']) ? $data['intention_handling_requirements_notes'] : null;
        $this->container['plan_protection_value'] = isset($data['plan_protection_value']) ? $data['plan_protection_value'] : null;
        $this->container['plan_protection_notes'] = isset($data['plan_protection_notes']) ? $data['plan_protection_notes'] : null;
        $this->container['information_atypical_properties_value'] = isset($data['information_atypical_properties_value']) ? $data['information_atypical_properties_value'] : null;
        $this->container['information_atypical_properties_notes'] = isset($data['information_atypical_properties_notes']) ? $data['information_atypical_properties_notes'] : null;
        $this->container['accessorials_total'] = isset($data['accessorials_total']) ? $data['accessorials_total'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets quantity
     * @return int
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     * @param int $quantity
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets unit
     * @return string
     */
    public function getUnit()
    {
        return $this->container['unit'];
    }

    /**
     * Sets unit
     * @param string $unit
     * @return $this
     */
    public function setUnit($unit)
    {
        $this->container['unit'] = $unit;

        return $this;
    }

    /**
     * Gets class_code
     * @return string
     */
    public function getClassCode()
    {
        return $this->container['class_code'];
    }

    /**
     * Sets class_code
     * @param string $class_code
     * @return $this
     */
    public function setClassCode($class_code)
    {
        $this->container['class_code'] = $class_code;

        return $this;
    }

    /**
     * Gets nmfc
     * @return string
     */
    public function getNmfc()
    {
        return $this->container['nmfc'];
    }

    /**
     * Sets nmfc
     * @param string $nmfc
     * @return $this
     */
    public function setNmfc($nmfc)
    {
        $this->container['nmfc'] = $nmfc;

        return $this;
    }

    /**
     * Gets dimensions
     * @return \Gateway\Client\Model\Dimensions
     */
    public function getDimensions()
    {
        return $this->container['dimensions'];
    }

    /**
     * Sets dimensions
     * @param \Gateway\Client\Model\Dimensions $dimensions
     * @return $this
     */
    public function setDimensions($dimensions)
    {
        $this->container['dimensions'] = $dimensions;

        return $this;
    }

    /**
     * Gets weight
     * @return \Gateway\Client\Model\Weight
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     * @param \Gateway\Client\Model\Weight $weight
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param string $description
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets item_ids
     * @return \Gateway\Client\Model\ItemIds
     */
    public function getItemIds()
    {
        return $this->container['item_ids'];
    }

    /**
     * Sets item_ids
     * @param \Gateway\Client\Model\ItemIds $item_ids
     * @return $this
     */
    public function setItemIds($item_ids)
    {
        $this->container['item_ids'] = $item_ids;

        return $this;
    }

    /**
     * Gets packaging_pieces
     * @return string
     */
    public function getPackagingPieces()
    {
        return $this->container['packaging_pieces'];
    }

    /**
     * Sets packaging_pieces
     * @param string $packaging_pieces
     * @return $this
     */
    public function setPackagingPieces($packaging_pieces)
    {
        $this->container['packaging_pieces'] = $packaging_pieces;

        return $this;
    }

    /**
     * Gets packaging_packaging_value
     * @return string[]
     */
    public function getPackagingPackagingValue()
    {
        return $this->container['packaging_packaging_value'];
    }

    /**
     * Sets packaging_packaging_value
     * @param string[] $packaging_packaging_value
     * @return $this
     */
    public function setPackagingPackagingValue($packaging_packaging_value)
    {
        $this->container['packaging_packaging_value'] = $packaging_packaging_value;

        return $this;
    }

    /**
     * Gets packaging_packaging_notes
     * @return string
     */
    public function getPackagingPackagingNotes()
    {
        return $this->container['packaging_packaging_notes'];
    }

    /**
     * Sets packaging_packaging_notes
     * @param string $packaging_packaging_notes
     * @return $this
     */
    public function setPackagingPackagingNotes($packaging_packaging_notes)
    {
        $this->container['packaging_packaging_notes'] = $packaging_packaging_notes;

        return $this;
    }

    /**
     * Gets intention_protection_value
     * @return string[]
     */
    public function getIntentionProtectionValue()
    {
        return $this->container['intention_protection_value'];
    }

    /**
     * Sets intention_protection_value
     * @param string[] $intention_protection_value
     * @return $this
     */
    public function setIntentionProtectionValue($intention_protection_value)
    {
        $this->container['intention_protection_value'] = $intention_protection_value;

        return $this;
    }

    /**
     * Gets intention_protection_notes
     * @return string
     */
    public function getIntentionProtectionNotes()
    {
        return $this->container['intention_protection_notes'];
    }

    /**
     * Sets intention_protection_notes
     * @param string $intention_protection_notes
     * @return $this
     */
    public function setIntentionProtectionNotes($intention_protection_notes)
    {
        $this->container['intention_protection_notes'] = $intention_protection_notes;

        return $this;
    }

    /**
     * Gets intention_handling_requirements_value
     * @return string[]
     */
    public function getIntentionHandlingRequirementsValue()
    {
        return $this->container['intention_handling_requirements_value'];
    }

    /**
     * Sets intention_handling_requirements_value
     * @param string[] $intention_handling_requirements_value
     * @return $this
     */
    public function setIntentionHandlingRequirementsValue($intention_handling_requirements_value)
    {
        $this->container['intention_handling_requirements_value'] = $intention_handling_requirements_value;

        return $this;
    }

    /**
     * Gets intention_handling_requirements_notes
     * @return string
     */
    public function getIntentionHandlingRequirementsNotes()
    {
        return $this->container['intention_handling_requirements_notes'];
    }

    /**
     * Sets intention_handling_requirements_notes
     * @param string $intention_handling_requirements_notes
     * @return $this
     */
    public function setIntentionHandlingRequirementsNotes($intention_handling_requirements_notes)
    {
        $this->container['intention_handling_requirements_notes'] = $intention_handling_requirements_notes;

        return $this;
    }

    /**
     * Gets plan_protection_value
     * @return string[]
     */
    public function getPlanProtectionValue()
    {
        return $this->container['plan_protection_value'];
    }

    /**
     * Sets plan_protection_value
     * @param string[] $plan_protection_value
     * @return $this
     */
    public function setPlanProtectionValue($plan_protection_value)
    {
        $this->container['plan_protection_value'] = $plan_protection_value;

        return $this;
    }

    /**
     * Gets plan_protection_notes
     * @return string
     */
    public function getPlanProtectionNotes()
    {
        return $this->container['plan_protection_notes'];
    }

    /**
     * Sets plan_protection_notes
     * @param string $plan_protection_notes
     * @return $this
     */
    public function setPlanProtectionNotes($plan_protection_notes)
    {
        $this->container['plan_protection_notes'] = $plan_protection_notes;

        return $this;
    }

    /**
     * Gets information_atypical_properties_value
     * @return string[]
     */
    public function getInformationAtypicalPropertiesValue()
    {
        return $this->container['information_atypical_properties_value'];
    }

    /**
     * Sets information_atypical_properties_value
     * @param string[] $information_atypical_properties_value
     * @return $this
     */
    public function setInformationAtypicalPropertiesValue($information_atypical_properties_value)
    {
        $this->container['information_atypical_properties_value'] = $information_atypical_properties_value;

        return $this;
    }

    /**
     * Gets information_atypical_properties_notes
     * @return string
     */
    public function getInformationAtypicalPropertiesNotes()
    {
        return $this->container['information_atypical_properties_notes'];
    }

    /**
     * Sets information_atypical_properties_notes
     * @param string $information_atypical_properties_notes
     * @return $this
     */
    public function setInformationAtypicalPropertiesNotes($information_atypical_properties_notes)
    {
        $this->container['information_atypical_properties_notes'] = $information_atypical_properties_notes;

        return $this;
    }

    /**
     * Gets accessorials_total
     * @return string
     */
    public function getAccessorialsTotal()
    {
        return $this->container['accessorials_total'];
    }

    /**
     * Sets accessorials_total
     * @param string $accessorials_total
     * @return $this
     */
    public function setAccessorialsTotal($accessorials_total)
    {
        $this->container['accessorials_total'] = $accessorials_total;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Gateway\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Gateway\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


