<?php
/**
 * Legs
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Delivery Gateway V2
 *
 * With the Delivery Gateway, you can initiate delivery through the warehouse and satellite network.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * Legs Class Doc Comment
 *
 * @category    Class
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Legs implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'legs';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'starting_leg' => 'bool',
        'leg_id' => 'string',
        'shipment_id' => 'int',
        'connecting_leg' => 'string',
        'relationship' => 'string',
        'pick_and_pack_lead_time' => 'int',
        'deliverylead_time' => 'int',
        'leaving_day' => 'string',
        'transit_time' => 'int',
        'lead_time' => 'int',
        'time_sensitive' => 'bool',
        'quoted_cost' => 'int',
        'departure_date' => '\DateTime',
        'arrival_date' => '\DateTime',
        'origin_location' => '\Swagger\Client\Model\OriginLocation',
        'destination_location' => '\Swagger\Client\Model\DestinationLocation',
        'freight_items' => '\Swagger\Client\Model\FreightItems[]',
        'shipment_rate_type' => 'string',
        'shipment_load' => 'string'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'starting_leg' => 'startingLeg',
        'leg_id' => 'legId',
        'shipment_id' => 'shipmentId',
        'connecting_leg' => 'connectingLeg',
        'relationship' => 'relationship',
        'pick_and_pack_lead_time' => 'pickAndPackLeadTime',
        'deliverylead_time' => 'deliveryleadTime',
        'leaving_day' => 'leavingDay',
        'transit_time' => 'transitTime',
        'lead_time' => 'leadTime',
        'time_sensitive' => 'timeSensitive',
        'quoted_cost' => 'quotedCost',
        'departure_date' => 'departureDate',
        'arrival_date' => 'arrivalDate',
        'origin_location' => 'originLocation',
        'destination_location' => 'destinationLocation',
        'freight_items' => 'freightItems',
        'shipment_rate_type' => 'shipmentRateType',
        'shipment_load' => 'shipmentLoad'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'starting_leg' => 'setStartingLeg',
        'leg_id' => 'setLegId',
        'shipment_id' => 'setShipmentId',
        'connecting_leg' => 'setConnectingLeg',
        'relationship' => 'setRelationship',
        'pick_and_pack_lead_time' => 'setPickAndPackLeadTime',
        'deliverylead_time' => 'setDeliveryleadTime',
        'leaving_day' => 'setLeavingDay',
        'transit_time' => 'setTransitTime',
        'lead_time' => 'setLeadTime',
        'time_sensitive' => 'setTimeSensitive',
        'quoted_cost' => 'setQuotedCost',
        'departure_date' => 'setDepartureDate',
        'arrival_date' => 'setArrivalDate',
        'origin_location' => 'setOriginLocation',
        'destination_location' => 'setDestinationLocation',
        'freight_items' => 'setFreightItems',
        'shipment_rate_type' => 'setShipmentRateType',
        'shipment_load' => 'setShipmentLoad'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'starting_leg' => 'getStartingLeg',
        'leg_id' => 'getLegId',
        'shipment_id' => 'getShipmentId',
        'connecting_leg' => 'getConnectingLeg',
        'relationship' => 'getRelationship',
        'pick_and_pack_lead_time' => 'getPickAndPackLeadTime',
        'deliverylead_time' => 'getDeliveryleadTime',
        'leaving_day' => 'getLeavingDay',
        'transit_time' => 'getTransitTime',
        'lead_time' => 'getLeadTime',
        'time_sensitive' => 'getTimeSensitive',
        'quoted_cost' => 'getQuotedCost',
        'departure_date' => 'getDepartureDate',
        'arrival_date' => 'getArrivalDate',
        'origin_location' => 'getOriginLocation',
        'destination_location' => 'getDestinationLocation',
        'freight_items' => 'getFreightItems',
        'shipment_rate_type' => 'getShipmentRateType',
        'shipment_load' => 'getShipmentLoad'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['starting_leg'] = isset($data['starting_leg']) ? $data['starting_leg'] : null;
        $this->container['leg_id'] = isset($data['leg_id']) ? $data['leg_id'] : null;
        $this->container['shipment_id'] = isset($data['shipment_id']) ? $data['shipment_id'] : null;
        $this->container['connecting_leg'] = isset($data['connecting_leg']) ? $data['connecting_leg'] : null;
        $this->container['relationship'] = isset($data['relationship']) ? $data['relationship'] : null;
        $this->container['pick_and_pack_lead_time'] = isset($data['pick_and_pack_lead_time']) ? $data['pick_and_pack_lead_time'] : null;
        $this->container['deliverylead_time'] = isset($data['deliverylead_time']) ? $data['deliverylead_time'] : null;
        $this->container['leaving_day'] = isset($data['leaving_day']) ? $data['leaving_day'] : null;
        $this->container['transit_time'] = isset($data['transit_time']) ? $data['transit_time'] : null;
        $this->container['lead_time'] = isset($data['lead_time']) ? $data['lead_time'] : null;
        $this->container['time_sensitive'] = isset($data['time_sensitive']) ? $data['time_sensitive'] : null;
        $this->container['quoted_cost'] = isset($data['quoted_cost']) ? $data['quoted_cost'] : null;
        $this->container['departure_date'] = isset($data['departure_date']) ? $data['departure_date'] : null;
        $this->container['arrival_date'] = isset($data['arrival_date']) ? $data['arrival_date'] : null;
        $this->container['origin_location'] = isset($data['origin_location']) ? $data['origin_location'] : null;
        $this->container['destination_location'] = isset($data['destination_location']) ? $data['destination_location'] : null;
        $this->container['freight_items'] = isset($data['freight_items']) ? $data['freight_items'] : null;
        $this->container['shipment_rate_type'] = isset($data['shipment_rate_type']) ? $data['shipment_rate_type'] : null;
        $this->container['shipment_load'] = isset($data['shipment_load']) ? $data['shipment_load'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets starting_leg
     * @return bool
     */
    public function getStartingLeg()
    {
        return $this->container['starting_leg'];
    }

    /**
     * Sets starting_leg
     * @param bool $starting_leg
     * @return $this
     */
    public function setStartingLeg($starting_leg)
    {
        $this->container['starting_leg'] = $starting_leg;

        return $this;
    }

    /**
     * Gets leg_id
     * @return string
     */
    public function getLegId()
    {
        return $this->container['leg_id'];
    }

    /**
     * Sets leg_id
     * @param string $leg_id
     * @return $this
     */
    public function setLegId($leg_id)
    {
        $this->container['leg_id'] = $leg_id;

        return $this;
    }

    /**
     * Gets shipment_id
     * @return int
     */
    public function getShipmentId()
    {
        return $this->container['shipment_id'];
    }

    /**
     * Sets shipment_id
     * @param int $shipment_id
     * @return $this
     */
    public function setShipmentId($shipment_id)
    {
        $this->container['shipment_id'] = $shipment_id;

        return $this;
    }

    /**
     * Gets connecting_leg
     * @return string
     */
    public function getConnectingLeg()
    {
        return $this->container['connecting_leg'];
    }

    /**
     * Sets connecting_leg
     * @param string $connecting_leg
     * @return $this
     */
    public function setConnectingLeg($connecting_leg)
    {
        $this->container['connecting_leg'] = $connecting_leg;

        return $this;
    }

    /**
     * Gets relationship
     * @return string
     */
    public function getRelationship()
    {
        return $this->container['relationship'];
    }

    /**
     * Sets relationship
     * @param string $relationship
     * @return $this
     */
    public function setRelationship($relationship)
    {
        $this->container['relationship'] = $relationship;

        return $this;
    }

    /**
     * Gets pick_and_pack_lead_time
     * @return int
     */
    public function getPickAndPackLeadTime()
    {
        return $this->container['pick_and_pack_lead_time'];
    }

    /**
     * Sets pick_and_pack_lead_time
     * @param int $pick_and_pack_lead_time
     * @return $this
     */
    public function setPickAndPackLeadTime($pick_and_pack_lead_time)
    {
        $this->container['pick_and_pack_lead_time'] = $pick_and_pack_lead_time;

        return $this;
    }

    /**
     * Gets deliverylead_time
     * @return int
     */
    public function getDeliveryleadTime()
    {
        return $this->container['deliverylead_time'];
    }

    /**
     * Sets deliverylead_time
     * @param int $deliverylead_time
     * @return $this
     */
    public function setDeliveryleadTime($deliverylead_time)
    {
        $this->container['deliverylead_time'] = $deliverylead_time;

        return $this;
    }

    /**
     * Gets leaving_day
     * @return string
     */
    public function getLeavingDay()
    {
        return $this->container['leaving_day'];
    }

    /**
     * Sets leaving_day
     * @param string $leaving_day
     * @return $this
     */
    public function setLeavingDay($leaving_day)
    {
        $this->container['leaving_day'] = $leaving_day;

        return $this;
    }

    /**
     * Gets transit_time
     * @return int
     */
    public function getTransitTime()
    {
        return $this->container['transit_time'];
    }

    /**
     * Sets transit_time
     * @param int $transit_time
     * @return $this
     */
    public function setTransitTime($transit_time)
    {
        $this->container['transit_time'] = $transit_time;

        return $this;
    }

    /**
     * Gets lead_time
     * @return int
     */
    public function getLeadTime()
    {
        return $this->container['lead_time'];
    }

    /**
     * Sets lead_time
     * @param int $lead_time
     * @return $this
     */
    public function setLeadTime($lead_time)
    {
        $this->container['lead_time'] = $lead_time;

        return $this;
    }

    /**
     * Gets time_sensitive
     * @return bool
     */
    public function getTimeSensitive()
    {
        return $this->container['time_sensitive'];
    }

    /**
     * Sets time_sensitive
     * @param bool $time_sensitive
     * @return $this
     */
    public function setTimeSensitive($time_sensitive)
    {
        $this->container['time_sensitive'] = $time_sensitive;

        return $this;
    }

    /**
     * Gets quoted_cost
     * @return int
     */
    public function getQuotedCost()
    {
        return $this->container['quoted_cost'];
    }

    /**
     * Sets quoted_cost
     * @param int $quoted_cost
     * @return $this
     */
    public function setQuotedCost($quoted_cost)
    {
        $this->container['quoted_cost'] = $quoted_cost;

        return $this;
    }

    /**
     * Gets departure_date
     * @return \DateTime
     */
    public function getDepartureDate()
    {
        return $this->container['departure_date'];
    }

    /**
     * Sets departure_date
     * @param \DateTime $departure_date
     * @return $this
     */
    public function setDepartureDate($departure_date)
    {
        $this->container['departure_date'] = $departure_date;

        return $this;
    }

    /**
     * Gets arrival_date
     * @return \DateTime
     */
    public function getArrivalDate()
    {
        return $this->container['arrival_date'];
    }

    /**
     * Sets arrival_date
     * @param \DateTime $arrival_date
     * @return $this
     */
    public function setArrivalDate($arrival_date)
    {
        $this->container['arrival_date'] = $arrival_date;

        return $this;
    }

    /**
     * Gets origin_location
     * @return \Swagger\Client\Model\OriginLocation
     */
    public function getOriginLocation()
    {
        return $this->container['origin_location'];
    }

    /**
     * Sets origin_location
     * @param \Swagger\Client\Model\OriginLocation $origin_location
     * @return $this
     */
    public function setOriginLocation($origin_location)
    {
        $this->container['origin_location'] = $origin_location;

        return $this;
    }

    /**
     * Gets destination_location
     * @return \Swagger\Client\Model\DestinationLocation
     */
    public function getDestinationLocation()
    {
        return $this->container['destination_location'];
    }

    /**
     * Sets destination_location
     * @param \Swagger\Client\Model\DestinationLocation $destination_location
     * @return $this
     */
    public function setDestinationLocation($destination_location)
    {
        $this->container['destination_location'] = $destination_location;

        return $this;
    }

    /**
     * Gets freight_items
     * @return \Swagger\Client\Model\FreightItems[]
     */
    public function getFreightItems()
    {
        return $this->container['freight_items'];
    }

    /**
     * Sets freight_items
     * @param \Swagger\Client\Model\FreightItems[] $freight_items
     * @return $this
     */
    public function setFreightItems($freight_items)
    {
        $this->container['freight_items'] = $freight_items;

        return $this;
    }

    /**
     * Gets shipment_rate_type
     * @return string
     */
    public function getShipmentRateType()
    {
        return $this->container['shipment_rate_type'];
    }

    /**
     * Sets shipment_rate_type
     * @param string $shipment_rate_type
     * @return $this
     */
    public function setShipmentRateType($shipment_rate_type)
    {
        $this->container['shipment_rate_type'] = $shipment_rate_type;

        return $this;
    }

    /**
     * Gets shipment_load
     * @return string
     */
    public function getShipmentLoad()
    {
        return $this->container['shipment_load'];
    }

    /**
     * Sets shipment_load
     * @param string $shipment_load
     * @return $this
     */
    public function setShipmentLoad($shipment_load)
    {
        $this->container['shipment_load'] = $shipment_load;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


